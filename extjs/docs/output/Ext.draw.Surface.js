Ext.data.JsonP.Ext_draw_Surface({"tagname":"class","html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'><a href='#!/api/Ext.Base' rel='Ext.Base' class='docClass'>Ext.Base</a><div class='subclass '><strong>Ext.draw.Surface</strong></div></div><h4>Mixins</h4><div class='dependency'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='docClass'>Ext.util.Observable</a></div><h4>Requires</h4><div class='dependency'><a href='#!/api/Ext.draw.CompositeSprite' rel='Ext.draw.CompositeSprite' class='docClass'>Ext.draw.CompositeSprite</a></div><h4>Uses</h4><div class='dependency'><a href='#!/api/Ext.draw.engine.Svg' rel='Ext.draw.engine.Svg' class='docClass'>Ext.draw.engine.Svg</a></div><div class='dependency'><a href='#!/api/Ext.draw.engine.Vml' rel='Ext.draw.engine.Vml' class='docClass'>Ext.draw.engine.Vml</a></div><h4>Files</h4><div class='dependency'><a href='source/Surface.html#Ext-draw-Surface' target='_blank'>Surface.js</a></div></pre><div class='doc-contents'><p>A Surface is an interface to render methods inside a draw <a href=\"#!/api/Ext.draw.Component\" rel=\"Ext.draw.Component\" class=\"docClass\">Ext.draw.Component</a>.\nA Surface contains methods to render sprites, get bounding boxes of sprites, add\nsprites to the canvas, initialize other graphic components, etc. One of the most used\nmethods for this class is the <code>add</code> method, to add Sprites to the surface.</p>\n\n<p>Most of the Surface methods are abstract and they have a concrete implementation\nin VML or SVG engines.</p>\n\n<p>A Surface instance can be accessed as a property of a draw component. For example:</p>\n\n<pre><code>drawComponent.surface.add({\n    type: 'circle',\n    fill: '#ffc',\n    radius: 100,\n    x: 100,\n    y: 100\n});\n</code></pre>\n\n<p>The configuration object passed in the <code>add</code> method is the same as described in the <a href=\"#!/api/Ext.draw.Sprite\" rel=\"Ext.draw.Sprite\" class=\"docClass\">Ext.draw.Sprite</a>\nclass documentation.</p>\n\n<h1>Listeners</h1>\n\n<p>You can also add event listeners to the surface using the <code>Observable</code> listener syntax. Supported events are:</p>\n\n<ul>\n<li>mousedown</li>\n<li>mouseup</li>\n<li>mouseover</li>\n<li>mouseout</li>\n<li>mousemove</li>\n<li>mouseenter</li>\n<li>mouseleave</li>\n<li>click</li>\n</ul>\n\n\n<p>For example:</p>\n\n<pre><code>drawComponent.surface.on({\n   'mousemove': function() {\n        console.log('moving the mouse over the surface');\n    }\n});\n</code></pre>\n\n<h1>Example</h1>\n\n<pre><code>var drawComponent = Ext.create('Ext.draw.Component', {\n    width: 800,\n    height: 600,\n    renderTo: document.body\n}), surface = drawComponent.surface;\n\nsurface.add([{\n    type: 'circle',\n    radius: 10,\n    fill: '#f00',\n    x: 10,\n    y: 10,\n    group: 'circles'\n}, {\n    type: 'circle',\n    radius: 10,\n    fill: '#0f0',\n    x: 50,\n    y: 50,\n    group: 'circles'\n}, {\n    type: 'circle',\n    radius: 10,\n    fill: '#00f',\n    x: 100,\n    y: 100,\n    group: 'circles'\n}, {\n    type: 'rect',\n    width: 20,\n    height: 20,\n    fill: '#f00',\n    x: 10,\n    y: 10,\n    group: 'rectangles'\n}, {\n    type: 'rect',\n    width: 20,\n    height: 20,\n    fill: '#0f0',\n    x: 50,\n    y: 50,\n    group: 'rectangles'\n}, {\n    type: 'rect',\n    width: 20,\n    height: 20,\n    fill: '#00f',\n    x: 100,\n    y: 100,\n    group: 'rectangles'\n}]);\n\n// Get references to my groups\ncircles = surface.getGroup('circles');\nrectangles = surface.getGroup('rectangles');\n\n// Animate the circles down\ncircles.animate({\n    duration: 1000,\n    to: {\n        translate: {\n            y: 200\n        }\n    }\n});\n\n// Animate the rectangles across\nrectangles.animate({\n    duration: 1000,\n    to: {\n        translate: {\n            x: 200\n        }\n    }\n});\n</code></pre>\n</div><div class='members'><div id='m-cfg'><div class='definedBy'>Defined By</div><h3 class='members-title'>Config options</h3><div class='subsection'><div id='cfg-height' class='member first-child not-inherited'><a href='#' class='side not-expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.draw.Surface' rel='Ext.draw.Surface' class='definedIn docClass'>Ext.draw.Surface</a><br/><a href='source/Surface.html#Ext-draw-Surface-cfg-height' target='_blank' class='viewSource'>view source</a></div><a href='#!/api/Ext.draw.Surface-cfg-height' class='name not-expandable'>height</a><span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a></span></div><div class='description'><div class='short'><p>The height of this component in pixels (defaults to auto).</p>\n</div><div class='long'><p>The height of this component in pixels (defaults to auto).</p>\n</div></div></div><div id='cfg-listeners' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='definedIn docClass'>Ext.util.Observable</a><br/><a href='source/Observable.html#Ext-util-Observable-cfg-listeners' target='_blank' class='viewSource'>view source</a></div><a href='#!/api/Ext.util.Observable-cfg-listeners' class='name expandable'>listeners</a><span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span></div><div class='description'><div class='short'>A config object containing one or more event handlers to be added to this object during initialization. ...</div><div class='long'><p>A config object containing one or more event handlers to be added to this object during initialization. This\nshould be a valid listeners config object as specified in the <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> example for attaching multiple\nhandlers at once.</p>\n\n<p><strong>DOM events from Ext JS <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a></strong></p>\n\n<p>While <em>some</em> Ext JS Component classes export selected DOM events (e.g. \"click\", \"mouseover\" etc), this is usually\nonly done when extra value can be added. For example the <a href=\"#!/api/Ext.view.View\" rel=\"Ext.view.View\" class=\"docClass\">DataView</a>'s <strong><code><a href=\"#!/api/Ext.view.View-event-itemclick\" rel=\"Ext.view.View-event-itemclick\" class=\"docClass\">itemclick</a></code></strong> event passing the node clicked on. To access DOM events directly from a\nchild element of a Component, we need to specify the <code>element</code> option to identify the Component property to add a\nDOM listener to:</p>\n\n<pre><code>new Ext.panel.Panel({\n    width: 400,\n    height: 200,\n    dockedItems: [{\n        xtype: 'toolbar'\n    }],\n    listeners: {\n        click: {\n            element: 'el', //bind to the underlying el property on the panel\n            fn: function(){ console.log('click el'); }\n        },\n        dblclick: {\n            element: 'body', //bind to the underlying body property on the panel\n            fn: function(){ console.log('dblclick body'); }\n        }\n    }\n});\n</code></pre>\n</div></div></div><div id='cfg-width' class='member  not-inherited'><a href='#' class='side not-expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.draw.Surface' rel='Ext.draw.Surface' class='definedIn docClass'>Ext.draw.Surface</a><br/><a href='source/Surface.html#Ext-draw-Surface-cfg-width' target='_blank' class='viewSource'>view source</a></div><a href='#!/api/Ext.draw.Surface-cfg-width' class='name not-expandable'>width</a><span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a></span></div><div class='description'><div class='short'><p>The width of this component in pixels (defaults to auto).</p>\n</div><div class='long'><p>The width of this component in pixels (defaults to auto).</p>\n</div></div></div></div></div><div id='m-property'><div class='definedBy'>Defined By</div><h3 class='members-title'>Properties</h3><div class='subsection'><div id='property-self' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='definedIn docClass'>Ext.Base</a><br/><a href='source/Base3.html#Ext-Base-property-self' target='_blank' class='viewSource'>view source</a></div><a href='#!/api/Ext.Base-property-self' class='name expandable'>self</a><span> : <a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a></span><strong class='protected-signature'>protected</strong></div><div class='description'><div class='short'>Get the reference to the current class from which this object was instantiated. ...</div><div class='long'><p>Get the reference to the current class from which this object was instantiated. Unlike <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>,\n<code>this.self</code> is scope-dependent and it's meant to be used for dynamic inheritance. See <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>\nfor a detailed comparison</p>\n\n<pre><code>Ext.define('My.Cat', {\n    statics: {\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        alert(this.self.speciesName); / dependent on 'this'\n\n        return this;\n    },\n\n    clone: function() {\n        return new this.self();\n    }\n});\n\n\nExt.define('My.SnowLeopard', {\n    extend: 'My.Cat',\n    statics: {\n        speciesName: 'Snow Leopard'         // My.SnowLeopard.speciesName = 'Snow Leopard'\n    }\n});\n\nvar cat = new My.Cat();                     // alerts 'Cat'\nvar snowLeopard = new My.SnowLeopard();     // alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(Ext.getClassName(clone));             // alerts 'My.SnowLeopard'\n</code></pre>\n</div></div></div></div></div><div id='m-method'><h3 class='members-title'>Methods</h3><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Instance Methods</h3><div id='method-constructor' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.draw.Surface' rel='Ext.draw.Surface' class='definedIn docClass'>Ext.draw.Surface</a><br/><a href='source/Surface.html#Ext-draw-Surface-method-constructor' target='_blank' class='viewSource'>view source</a></div><strong class='constructor-signature'>new</strong><a href='#!/api/Ext.draw.Surface-method-constructor' class='name expandable'>Ext.draw.Surface</a>( <span class='pre'>[<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> config]</span> ) : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></div><div class='description'><div class='short'>Creates new Surface. ...</div><div class='long'><p>Creates new Surface.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>config</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> (optional)<div class='sub-desc'><p>Config object.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-add' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.draw.Surface' rel='Ext.draw.Surface' class='definedIn docClass'>Ext.draw.Surface</a><br/><a href='source/Surface.html#Ext-draw-Surface-method-add' target='_blank' class='viewSource'>view source</a></div><a href='#!/api/Ext.draw.Surface-method-add' class='name expandable'>add</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>Adds a Sprite to the surface. ...</div><div class='long'><p>Adds a Sprite to the surface. See <a href=\"#!/api/Ext.draw.Sprite\" rel=\"Ext.draw.Sprite\" class=\"docClass\">Ext.draw.Sprite</a> for the configuration object to be\npassed into this method.</p>\n\n<p>For example:</p>\n\n<pre><code>drawComponent.surface.add({\n    type: 'circle',\n    fill: '#ffc',\n    radius: 100,\n    x: 100,\n    y: 100\n});\n</code></pre>\n</div></div></div><div id='method-addCls' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.draw.Surface' rel='Ext.draw.Surface' class='definedIn docClass'>Ext.draw.Surface</a><br/><a href='source/Surface.html#Ext-draw-Surface-method-addCls' target='_blank' class='viewSource'>view source</a></div><a href='#!/api/Ext.draw.Surface-method-addCls' class='name expandable'>addCls</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a> sprite, <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[] className</span> )</div><div class='description'><div class='short'>Adds one or more CSS classes to the element. ...</div><div class='long'><p>Adds one or more CSS classes to the element. Duplicate classes are automatically filtered out.</p>\n\n<p>For example:</p>\n\n<pre><code>drawComponent.surface.addCls(sprite, 'x-visible');\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>sprite</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>The sprite to add the class to.</p>\n</div></li><li><span class='pre'>className</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]<div class='sub-desc'><p>The CSS class to add, or an array of classes</p>\n</div></li></ul></div></div></div><div id='method-addEvents' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='definedIn docClass'>Ext.util.Observable</a><br/><a href='source/Observable.html#Ext-util-Observable-method-addEvents' target='_blank' class='viewSource'>view source</a></div><a href='#!/api/Ext.util.Observable-method-addEvents' class='name expandable'>addEvents</a>( <span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> o, [<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>... more]</span> )</div><div class='description'><div class='short'>Adds the specified events to the list of events which this Observable may fire. ...</div><div class='long'><p>Adds the specified events to the list of events which this Observable may fire.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>o</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>Either an object with event names as properties with a value of <code>true</code> or the first\nevent name string if multiple event names are being passed as separate parameters. Usage:</p>\n\n<pre><code>this.addEvents({\n    storeloaded: true,\n    storecleared: true\n});\n</code></pre>\n</div></li><li><span class='pre'>more</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>... (optional)<div class='sub-desc'><p>Additional event names if multiple event names are being passed as separate\nparameters. Usage:</p>\n\n<pre><code>this.addEvents('storeloaded', 'storecleared');\n</code></pre>\n</div></li></ul></div></div></div><div id='method-addGradient' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.draw.Surface' rel='Ext.draw.Surface' class='definedIn docClass'>Ext.draw.Surface</a><br/><a href='source/Surface.html#Ext-draw-Surface-method-addGradient' target='_blank' class='viewSource'>view source</a></div><a href='#!/api/Ext.draw.Surface-method-addGradient' class='name expandable'>a