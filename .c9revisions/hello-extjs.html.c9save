{"ts":1371596440567,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"\r\n    \"http://www.w3.org/TR/html4/loose.dtd\">\r\n<html>\r\n\t<head>\r\n\t\t<title></title>\r\n\r\n        <link rel=\"stylesheet\" type=\"text/css\" href=\"extjs/resources/css/ext-all.css\">\r\n        <script type=\"text/javascript\" src=\"extjs/ext-debug.js\"></script>\r\n        <script type=\"text/javascript\" src=\"app.js\"></script>\r\n\t</head>\r\n\t<body>\r\n\t\t<h1>It works!</h1>\r\n\t</body>\r\n</html>\r\n"]],"start1":0,"start2":0,"length1":0,"length2":433}]],"length":433}
{"contributors":[],"silentsave":false,"ts":1377123686446,"patch":[[{"diffs":[[0,"ipt\""],[-1," src=\"app.js\">"],[1,">\r\n            // MyApp\r\n\r\n // Ext.create('Ext.Window', {\r\n        // title: 'Left Header, plain: true',\r\n        // width: 400,\r\n        // height: 200,\r\n        // x: 10,\r\n        // y: 200,\r\n        // plain: true,\r\n        // headerPosition: 'left',\r\n        // layout: 'fit',\r\n        // items: {\r\n            // border: false\r\n        // }\r\n    // }).show();\r\n    \r\n    Ext.require([\r\n    'Ext.window.Window',\r\n    'Ext.tab.*',\r\n    'Ext.toolbar.Spacer',\r\n    'Ext.layout.container.Card',\r\n    'Ext.layout.container.Border'\r\n]);\r\n\r\nExt.onReady(function(){\r\n    var constrainedWin, constrainedWin2;\r\n    \r\n    Ext.util.Region.override({\r\n        colors: ['red', 'orange', 'yellow', 'green', 'blue', 'indigo', 'violet'],\r\n        nextColor: 0,\r\n        show: function(){\r\n            var style = {\r\n                display: 'block',\r\n                position: 'absolute',\r\n                top: this.top + 'px',\r\n                left: this.left + 'px',\r\n                height: ((this.bottom - this.top) + 1) + 'px',\r\n                width: ((this.right - this.left) + 1) + 'px',\r\n                opacity: 0.3,\r\n                'pointer-events': 'none',\r\n                'z-index': 9999999\r\n            };\r\n            if (!this.highlightEl) {\r\n                style['background-color'] = this.colors[this.nextColor];\r\n                Ext.util.Region.prototype.nextColor++;\r\n                this.highlightEl = Ext.getBody().createChild({\r\n                    style: style\r\n                });\r\n                if (this.nextColor >= this.colors.length) {\r\n                    this.nextColor = 0;\r\n                }\r\n            } else {\r\n                this.highlightEl.setStyle(style);\r\n            }\r\n        },\r\n        hide: function(){\r\n            if (this.highlightEl) {\r\n                this.highlightEl.setStyle({\r\n                    display: 'none'\r\n                });\r\n            }\r\n        }\r\n    });\r\n\r\n    var win2 = Ext.create('widget.window', {\r\n        height: 200,\r\n        width: 400,\r\n        x: 450,\r\n        y: 450,\r\n        title: 'Constraining Window, plain: true',\r\n        closable: false,\r\n        plain: true,\r\n        layout: 'fit',\r\n        items: [constrainedWin = Ext.create('Ext.Window', {\r\n            title: 'Constrained Window',\r\n            width: 200,\r\n            height: 100,\r\n\r\n            // Constraining will pull the Window leftwards so that it's within the parent Window\r\n            x: 1000,\r\n            y: 20,\r\n            constrain: true,\r\n            layout: 'fit',\r\n            items: {\r\n                border: false\r\n            }\r\n        }), constrainedWin2 = Ext.create('Ext.Window', {\r\n            title: 'Header-Constrained Win',\r\n            width: 200,\r\n            height: 100,\r\n            x: 120,\r\n            y: 120,\r\n            constrainHeader: true,\r\n            layout: 'fit',\r\n            items: {\r\n                border: false\r\n            }\r\n        }),{\r\n            border: false\r\n        }]\r\n    });\r\n    win2.show();\r\n    constrainedWin.show();\r\n    constrainedWin2.show();\r\n\r\n    Ext.create('Ext.Window', {\r\n        title: 'Left Header, plain: true',\r\n        width: 400,\r\n        height: 200,\r\n        x: 10,\r\n        y: 200,\r\n        plain: true,\r\n        headerPosition: 'left',\r\n        layout: 'fit',\r\n        items: {\r\n            border: false\r\n        }\r\n    }).show();\r\n\r\n    Ext.create('Ext.Window', {\r\n        title: 'Right Header, plain: true',\r\n        width: 400,\r\n        height: 200,\r\n        x: 450,\r\n        y: 200,\r\n        headerPosition: 'right',\r\n        layout: 'fit',\r\n        items: {\r\n            border: false\r\n        }\r\n    }).show();\r\n\r\n    Ext.create('Ext.Window', {\r\n        title: 'Bottom Header, plain: true',\r\n        width: 400,\r\n        height: 200,\r\n        x: 10,\r\n        y: 450,\r\n        plain: true,\r\n        headerPosition: 'bottom',\r\n        layout: 'fit',\r\n        items: {\r\n            border: false\r\n        }\r\n    }).show();\r\n\t\r\n\t\r\n\t// experiments extend:\t\r\n\tvar MyApp = { MyWindow:{} };\r\n\t\r\n\tExt.define('MyApp.MyWindow', {\r\n\t extend: 'Ext.Window',\r\n\t title: 'Welcome!',\r\n\t initComponent: function() {\r\n\t  this.items = [{\r\n\t   xtype: 'textfield',\r\n\t   name: 'tfName',\r\n\t   fieldLabel: 'Enter your name'\r\n\t  }],\r\n\t  this.callParent(arguments);\r\n\t }\r\n\t});\r\n\t\r\n\tvar win = Ext.create('MyApp.MyWindow');\r\n\t// console.log(win);\r\n\twin.show();\r\n\r\n\t// experiments model:\t\r\n\tExt.define('Patient', {\r\n\t  extend: 'Ext.data.Model',\r\n\t  fields: [\r\n\t\t{name: 'name'},\r\n\t\t{name: 'age', type: 'int'},\r\n\t\t{name: 'phone', type: 'string'},\r\n\t\t{name: 'gender', type: 'string'},\r\n\t\t{name: 'birthday', type: 'date', dateFormat: 'd/m/Y'},\r\n\t\t{name: 'alive', type: 'boolean', defaultValue: true},\r\n\t\t{name: 'weight', type: 'float'},\r\n\t\t{\r\n\t\t name: 'weightKg', \r\n\t\t type: 'float',\r\n\t\t  convert: function(value, record) {\r\n\t\t\tvar weightPounds = record.get('weight');\r\n\t\t\treturn Math.round(weightPounds * 0.45359237);\r\n\t\t  }\r\n\t\t}\r\n\t  ]\r\n\t});\r\n\t\r\n\tconsole.log(new Patient);\r\n});\r\n\r\n        "],[0,"</sc"]],"start1":344,"start2":344,"length1":22,"length2":4999}]],"length":5410,"saved":false}
