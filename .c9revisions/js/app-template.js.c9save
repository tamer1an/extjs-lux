{"ts":1377128866982,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"Ext.require('Ext.container.Viewport');\r\n\r\nExt.application({\r\n    name:'UserApp',\r\n    appFolder:'UserApp',   \r\n    // autoCreateViewport : true,\r\n\t\r\n    controllers:['UserApp.controller.ui.LoginForm'],\r\n\t\t\r\n\tinit: function(){ console.log(' init app '); },\t\t\r\n\t\r\n    launch: function(){\r\n\t\tconsole.log(' launch ');\r\n\t\t\r\n        Ext.create('Ext.container.Viewport', {\r\n\t\t\tlayout: 'border',\r\n\t\t\titems: [{\r\n\t\t\t\tregion: 'north',\r\n\t\t\t\thtml: '<h1 class=\"x-panel-header\">Page Title</h1>',\r\n\t\t\t\tborder: false,\r\n\t\t\t\tmargins: '0 0 5 0'\r\n\t\t\t}, {\r\n\t\t\t\tregion: 'west',\r\n\t\t\t\tcollapsible: true,\r\n\t\t\t\ttitle: 'Navigation',\r\n\t\t\t\twidth: 150\r\n\t\t\t\t// could use a TreePanel or AccordionLayout for navigational items\r\n\t\t\t}, {\r\n\t\t\t\tregion: 'south',\r\n\t\t\t\ttitle: 'South Panel',\r\n\t\t\t\tcollapsible: true,\r\n\t\t\t\thtml: 'Information goes here',\r\n\t\t\t\tsplit: true,\r\n\t\t\t\theight: 100,\r\n\t\t\t\tminHeight: 100\r\n\t\t\t}, {\r\n\t\t\t\tregion: 'east',\r\n\t\t\t\ttitle: 'East Panel',\r\n\t\t\t\tcollapsible: true,\r\n\t\t\t\tsplit: true,\r\n\t\t\t\twidth: 150\r\n\t\t\t}, {\r\n\t\t\t\tregion: 'center',\r\n\t\t\t\txtype: 'tabpanel', // TabPanel itself has no title\r\n\t\t\t\tactiveTab: 0,      // First tab active by default\r\n\t\t\t\titems:[ {\r\n\t\t\t\t\ttitle: 'Default Tab',\r\n\t\t\t\t\thtml: 'The first tab\\'s content. Others may be added dynamically'\r\n\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}]\r\n\t\t});\r\n    }\r\n});\r\n\r\n// var app = UserApp.getApplication();\r\n"]],"start1":0,"start2":0,"length1":0,"length2":1322}]],"length":1322}
{"contributors":[],"silentsave":false,"ts":1377302243791,"patch":[[{"diffs":[[0,"ication();\r\n"],[1,"\r\n/*\r\n//////////////////////////////////////////\r\nExt.define('MyApp.view.MyGrid',{\r\n    extend : 'Ext.grid.Panel',\r\n    store : 'MyStore',\r\n    columns : [{...}],\r\n    initComponent : function(){\r\n        this.menu = this.buildMenu();\r\n        this.callParent(arguments);\r\n        this.on({\r\n            scope : this,\r\n            itemcontextmenu : this.onItemContextMenu\r\n        });\r\n    },\r\n \r\n    buildMenu : function(){\r\n        return Ext.create('Ext.menu.Menu',{\r\n            items : [{\r\n                text : 'Do Something'\r\n            }]\r\n        });\r\n    },\r\n \r\n    onDestroy : function(){\r\n        this.menu.destroy();\r\n        this.callParent(arguments);\r\n    },\r\n \r\n    onItemContextMenu : function(view,rec,item,index,event){\r\n        event.stopEvent();\r\n        this.menu.showAt(event.getXY());\r\n    }\r\n});\r\n\r\n//////////////////////////////////////////\r\nthis.getController('SomeOtherController').runSomeFunction(myParm);\r\n\r\nMyApp.getApplication().fireEvent('myevent');\r\n\r\nMyApp.getApplication().on({\r\n    myevent : doSomething\r\n});\r\n\r\n//////////////////////////////////////////\r\n\r\n\r\n*/\r\n"]],"start1":1310,"start2":1310,"length1":12,"length2":1116}]],"length":2426,"saved":false}
{"ts":1377302894967,"patch":[[{"diffs":[[0,"//////\r\n"],[1,"var pictureSaveButton = Ext.ComponentQuery.query('#picturetoolbar > #savebutton')[0];\r\n \r\nvar orderSaveButton = Ext.ComponentQuery.query('#ordertoolbar > #savebutton')[0]; \r\n \r\n// assuming we have a reference to the “picturetoolbar” as picToolbar\r\npicToolbar.down(‘#savebutton’);\r\n\r\nExample 6C. GOOD: Referencing components by ‘itemId’."],[0,"\r\n\r\n*/\r\n"]],"start1":2410,"start2":2410,"length1":16,"length2":352}]],"length":2762,"saved":false}
{"ts":1377302916716,"patch":[[{"diffs":[[0,"//////\r\n"],[1,"    "],[0,"this.get"]],"start1":2185,"start2":2185,"length1":16,"length2":20},{"diffs":[[0,"n(myParm);\r\n"],[-1,"\r\n"],[1,"    \r\n    "],[0,"MyApp.getApp"]],"start1":2253,"start2":2253,"length1":26,"length2":34},{"diffs":[[0,"ent');\r\n"],[-1,"\r\n"],[1,"    \r\n    "],[0,"MyApp.ge"]],"start1":2313,"start2":2313,"length1":18,"length2":26},{"diffs":[[0,"ion().on({\r\n"],[1,"    "],[0,"    myevent "]],"start1":2348,"start2":2348,"length1":24,"length2":28},{"diffs":[[0,"ething\r\n"],[1,"    "],[0,"});\r\n\r\n/"]],"start1":2383,"start2":2383,"length1":16,"length2":20},{"diffs":[[0,"//////\r\n"],[1,"    "],[0,"var pict"]],"start1":2438,"start2":2438,"length1":16,"length2":20},{"diffs":[[0,")[0];\r\n "],[-1,"\r\n"],[1,"   "],[0,"var orde"]],"start1":2530,"start2":2530,"length1":18,"length2":19},{"diffs":[[0,"orderSaveButton "],[1,"  "],[0,"= Ext.ComponentQ"]],"start1":2545,"start2":2545,"length1":32,"length2":34},{"diffs":[[0,"[0]; \r\n "],[-1,"\r\n"],[1,"    \r\n    "],[0,"// assum"]],"start1":2620,"start2":2620,"length1":18,"length2":26},{"diffs":[[0,"oolbar\r\n"],[1,"    "],[0,"picToolb"]],"start1":2701,"start2":2701,"length1":16,"length2":20},{"diffs":[[0,"ton’);\r\n"],[-1,"\r\n"],[1,"    \r\n    "],[0,"Example "]],"start1":2738,"start2":2738,"length1":18,"length2":26},{"diffs":[[0,"emId’.\r\n"],[-1,"\r\n"],[0,"*/\r\n"]],"start1":2803,"start2":2803,"length1":14,"length2":12}]],"length":2815,"saved":false}
{"ts":1377303007225,"patch":[[{"diffs":[[0,"emId’.\r\n"],[1,"    \r\n//////////////////////////////////////////     \r\n    var mySaveButton = myToolbar.items.getAt(2);    \r\n    var myWindow = myToolbar.ownerCt;\r\n    Example 7A. BAD: Avoid retrieving component references based on component positioning.\r\n\r\n    var mySaveButton = myToolbar.down(‘#savebutton’);    // searching against itemId    \r\n    var myWindow = myToolbar.up(‘window’);\r\n    Example 7B. GOOD: Use ComponentQuery to retrieve relative references.\r\n"],[0,"*/\r\n"]],"start1":2803,"start2":2803,"length1":12,"length2":463}]],"length":3266,"saved":false}
{"ts":1377303102907,"patch":[[{"diffs":[[0,"ng\r\n    });\r"],[1,"\nExample 3C. Another controller listens for the app-level event.\r"],[0,"\n\r\n/////////"]],"start1":2387,"start2":2387,"length1":24,"length2":89}]],"length":3331,"saved":false}
{"ts":1377303165808,"patch":[[{"diffs":[[0,"\n    }\r\n});\r"],[1,"\nExample 2C. BEST: When the grid is destroyed, the context menu is also destroyed.\r"],[0,"\n\r\n/////////"]],"start1":2134,"start2":2134,"length1":24,"length2":107}]],"length":3414,"saved":false}
{"ts":1377303269396,"patch":[[{"diffs":[[0,"ences.\r\n"],[1," \r\n//////////////////////////////////////////   \r\n    9. Constraining a component to a parent component’s layout\r\n"],[0,"*/\r\n"]],"start1":3402,"start2":3402,"length1":12,"length2":126}]],"length":3528,"saved":false}
{"ts":1377303435037,"patch":[[{"diffs":[[0,"layout\r\n"],[1,"    \r\n    Ext.define('MyApp.view.MyGrid',{\r\n    extend : 'Ext.grid.Panel',\r\n    initComponent : function(){\r\n        Ext.apply(this,{\r\n            store : ‘MyStore’,\r\n            region : 'center',\r\n            ......\r\n        });\r\n        this.callParent(arguments);\r\n    }\r\n});\r\nExample 9A. BAD: The ‘center’ region should not be specified here.\r\n-----------------\r\nExt.define('MyApp.view.MyGrid',{\r\n    extend : 'Ext.grid.Panel',\r\n    initComponent : function(){\r\n        Ext.apply(this,{\r\n            store : ‘MyStore’,\r\n            ......\r\n        });\r\n    }\r\n});\r\n \r\n// specify the region when the component is created...\r\nExt.create('MyApp.view.MyGrid',{\r\n    region : 'center' \r\n});\r\nExample 9B. GOOD: Specify the region when creating the component.\r\n-------------\r\n\r\nExt.define('MyApp.view.MyGrid',{\r\n    extend : 'Ext.grid.Panel',\r\n    region : 'center', // default region\r\n    initComponent : function(){\r\n        Ext.apply(this,{\r\n            store : ‘MyStore’,\r\n            ......\r\n        });\r\n    }\r\n});\r\n \r\nExt.create(‘MyApp.view.MyGrid’,{\r\n    region : ‘north’, // overridden region\r\n    height : 400\r\n});\r\nExample 9C. Also GOOD: Specify a default region and override if necessary.\r\n\r\n\r\n//////////////////////////////////////////   \r\nitems : [{\r\n    fieldLabel : ‘User’,\r\n    name : ‘UserName’\r\n},{\r\n    fieldLabel : ‘Email’,\r\n    name : ‘Email’\r\n},{\r\n    fieldLabel : ‘Home Address’,\r\n    name : ‘Address’\r\n}];\r\n \r\nmyForm.loadRecord(record);\r\nExample 10B. GOOD: Use loadRecord to load all form fields with one line of code.\r\n"],[0,"*/\r\n"]],"start1":3516,"start2":3516,"length1":12,"length2":1555}]],"length":5071,"saved":false}
{"contributors":[],"silentsave":false,"ts":1377384240147,"patch":[[{"diffs":[[0,"erApp',   \r\n"],[-1,"   "],[0," // autoCrea"]],"start1":99,"start2":99,"length1":27,"length2":24},{"diffs":[[0," : true,"],[1," // Ext.create( \"UserApp.view.Viewport\",this); "],[0,"\r\n\t\r\n   "]],"start1":133,"start2":133,"length1":16,"length2":63}]],"length":5115,"saved":false}
